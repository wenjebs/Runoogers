// Mocks generated by Mockito 5.4.4 from annotations
// in runningapp/test/run_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:connectivity_plus/connectivity_plus.dart' as _i16;
import 'package:flutter/material.dart' as _i9;
import 'package:geolocator/geolocator.dart' as _i6;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i17;
import 'package:just_audio/just_audio.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:runningapp/database/database.dart' as _i2;
import 'package:runningapp/database/repository.dart' as _i7;
import 'package:runningapp/models/progress_model.dart' as _i5;
import 'package:runningapp/models/quests_model.dart' as _i13;
import 'package:runningapp/models/route_model.dart' as _i14;
import 'package:runningapp/models/run.dart' as _i10;
import 'package:runningapp/models/user.dart' as _i4;
import 'package:runningapp/pages/logged_in/run_page/map_and_location_logic/location_service.dart'
    as _i15;
import 'package:runningapp/pages/logged_in/story_page/models/story_model.dart'
    as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i3.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_2<T extends Object?> extends _i1.SmartFake
    implements _i3.QuerySnapshot<T> {
  _FakeQuerySnapshot_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_3 extends _i1.SmartFake implements _i4.User {
  _FakeUser_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuestProgressModel_4 extends _i1.SmartFake
    implements _i5.QuestProgressModel {
  _FakeQuestProgressModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_5 extends _i1.SmartFake implements _i6.Position {
  _FakePosition_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i7.Repository {
  @override
  _i2.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_0(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeDatabase_0(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.Database);

  @override
  _i8.Future<void> addData(
    String? collection,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addData,
          [
            collection,
            data,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Stream<_i3.QuerySnapshot<Object?>> getData(String? collection) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [collection],
        ),
        returnValue: _i8.Stream<_i3.QuerySnapshot<Object?>>.empty(),
        returnValueForMissingStub:
            _i8.Stream<_i3.QuerySnapshot<Object?>>.empty(),
      ) as _i8.Stream<_i3.QuerySnapshot<Object?>>);

  @override
  _i8.Future<void> logoutAndRedirect(_i9.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #logoutAndRedirect,
          [context],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.DocumentSnapshot<Map<String, dynamic>>> getUserData(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [userId],
        ),
        returnValue:
            _i8.Future<_i3.DocumentSnapshot<Map<String, dynamic>>>.value(
                _FakeDocumentSnapshot_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getUserData,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i3.DocumentSnapshot<Map<String, dynamic>>>.value(
                _FakeDocumentSnapshot_1<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getUserData,
            [userId],
          ),
        )),
      ) as _i8.Future<_i3.DocumentSnapshot<Map<String, dynamic>>>);

  @override
  _i8.Future<void> addUser(
    String? collection,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [
            collection,
            data,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> addRun(
    String? collection,
    _i10.Run? run,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRun,
          [
            collection,
            run,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> addPost(
    String? collection,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPost,
          [
            collection,
            data,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> addLikeToPost(
    String? postId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLikeToPost,
          [
            postId,
            userId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> addLikeToComment(
    String? postId,
    String? commentId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLikeToComment,
          [
            postId,
            commentId,
            userId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i3.QuerySnapshot<Object?>> getRuns(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRuns,
          [userId],
        ),
        returnValue: _i8.Future<_i3.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_2<Object?>(
          this,
          Invocation.method(
            #getRuns,
            [userId],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i3.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_2<Object?>(
          this,
          Invocation.method(
            #getRuns,
            [userId],
          ),
        )),
      ) as _i8.Future<_i3.QuerySnapshot<Object?>>);

  @override
  _i8.Future<String> fetchName(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #fetchName,
          [userId],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #fetchName,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #fetchName,
            [userId],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<String>> getFriendRequests() => (super.noSuchMethod(
        Invocation.method(
          #getFriendRequests,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> sendFriendRequest(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #sendFriendRequest,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> acceptFriendRequest(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #acceptFriendRequest,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> rejectFriendRequest(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #rejectFriendRequest,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<String>> getFriendList() => (super.noSuchMethod(
        Invocation.method(
          #getFriendList,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<_i4.User> getUserProfile(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i8.Future<_i4.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i4.User>.value(_FakeUser_3(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
      ) as _i8.Future<_i4.User>);

  @override
  _i8.Future<bool> getTrainingOnboarded() => (super.noSuchMethod(
        Invocation.method(
          #getTrainingOnboarded,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<dynamic>> getTrainingPlans() => (super.noSuchMethod(
        Invocation.method(
          #getTrainingPlans,
          [],
        ),
        returnValue: _i8.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub: _i8.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i8.Future<List<dynamic>>);

  @override
  _i8.Future<String> getTodayTrainingType() => (super.noSuchMethod(
        Invocation.method(
          #getTodayTrainingType,
          [],
        ),
        returnValue: _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getTodayTrainingType,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getTodayTrainingType,
            [],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<int> getRunsDone() => (super.noSuchMethod(
        Invocation.method(
          #getRunsDone,
          [],
        ),
        returnValue: _i8.Future<int>.value(0),
        returnValueForMissingStub: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> incrementTotalDistanceRan(double? distance) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementTotalDistanceRan,
          [distance],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> incrementTotalTimeRan(int? time) => (super.noSuchMethod(
        Invocation.method(
          #incrementTotalTimeRan,
          [time],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> incrementRuns() => (super.noSuchMethod(
        Invocation.method(
          #incrementRuns,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> fetchUserAchievements({String? uid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserAchievements,
          [],
          {#uid: uid},
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<String>> updateUserAchievements(
    double? distance,
    int? time,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserAchievements,
          [
            distance,
            time,
          ],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> addPoints(int? points) => (super.noSuchMethod(
        Invocation.method(
          #addPoints,
          [points],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> fetchTopUsersGlobal() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTopUsersGlobal,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<Map<String, dynamic>>> fetchTopUsersFriends() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTopUsersFriends,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<_i12.Story>> getStories() => (super.noSuchMethod(
        Invocation.method(
          #getStories,
          [],
        ),
        returnValue: _i8.Future<List<_i12.Story>>.value(<_i12.Story>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i12.Story>>.value(<_i12.Story>[]),
      ) as _i8.Future<List<_i12.Story>>);

  @override
  _i8.Future<bool> hasUserCompletedStory(
    String? userId,
    String? storyId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasUserCompletedStory,
          [
            userId,
            storyId,
          ],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> setUserActiveStory(
    String? userId,
    String? storyId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserActiveStory,
          [
            userId,
            storyId,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i13.Quest>> getQuests(String? storyId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuests,
          [storyId],
        ),
        returnValue: _i8.Future<List<_i13.Quest>>.value(<_i13.Quest>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i13.Quest>>.value(<_i13.Quest>[]),
      ) as _i8.Future<List<_i13.Quest>>);

  @override
  _i8.Future<_i5.QuestProgressModel> getQuestProgress(String? storyId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestProgress,
          [storyId],
        ),
        returnValue:
            _i8.Future<_i5.QuestProgressModel>.value(_FakeQuestProgressModel_4(
          this,
          Invocation.method(
            #getQuestProgress,
            [storyId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.QuestProgressModel>.value(_FakeQuestProgressModel_4(
          this,
          Invocation.method(
            #getQuestProgress,
            [storyId],
          ),
        )),
      ) as _i8.Future<_i5.QuestProgressModel>);

  @override
  void updateQuestProgress(
    double? distance,
    int? time,
    int? currQuestID,
    String? storyId,
    _i9.BuildContext? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateQuestProgress,
          [
            distance,
            time,
            currQuestID,
            storyId,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> resetQuestsProgress(String? storyId) => (super.noSuchMethod(
        Invocation.method(
          #resetQuestsProgress,
          [storyId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> saveRoute(_i14.RouteModel? route) => (super.noSuchMethod(
        Invocation.method(
          #saveRoute,
          [route],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i14.RouteModel>> getSavedRoutes() => (super.noSuchMethod(
        Invocation.method(
          #getSavedRoutes,
          [],
        ),
        returnValue:
            _i8.Future<List<_i14.RouteModel>>.value(<_i14.RouteModel>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i14.RouteModel>>.value(<_i14.RouteModel>[]),
      ) as _i8.Future<List<_i14.RouteModel>>);

  @override
  void deleteRoute(String? getId) => super.noSuchMethod(
        Invocation.method(
          #deleteRoute,
          [getId],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i15.LocationService {
  @override
  double get zoomLevel => (super.noSuchMethod(
        Invocation.getter(#zoomLevel),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  int get idx => (super.noSuchMethod(
        Invocation.getter(#idx),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set idx(int? _idx) => super.noSuchMethod(
        Invocation.setter(
          #idx,
          _idx,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get endPlayed => (super.noSuchMethod(
        Invocation.getter(#endPlayed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set endPlayed(bool? _endPlayed) => super.noSuchMethod(
        Invocation.setter(
          #endPlayed,
          _endPlayed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get distanceTravelled => (super.noSuchMethod(
        Invocation.getter(#distanceTravelled),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  List<_i16.ConnectivityResult> get connectivity => (super.noSuchMethod(
        Invocation.getter(#connectivity),
        returnValue: <_i16.ConnectivityResult>[],
        returnValueForMissingStub: <_i16.ConnectivityResult>[],
      ) as List<_i16.ConnectivityResult>);

  @override
  bool get locationServiceEnabled => (super.noSuchMethod(
        Invocation.getter(#locationServiceEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void openLocationSettings() => super.noSuchMethod(
        Invocation.method(
          #openLocationSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> checkPermission() => (super.noSuchMethod(
        Invocation.method(
          #checkPermission,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<_i6.Position> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i8.Future<_i6.Position>.value(_FakePosition_5(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.Position>.value(_FakePosition_5(
          this,
          Invocation.method(
            #getCurrentLocation,
            [],
          ),
        )),
      ) as _i8.Future<_i6.Position>);

  @override
  void listenToLocationChangesBeforeStart(dynamic callback) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToLocationChangesBeforeStart,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void listenToLocationChanges(
    dynamic updateRunPage,
    _i8.Completer<_i17.GoogleMapController>? controller,
    bool? running,
    bool? storyRun,
    double? questDistance,
    String? activeStoryTitle,
    int? currentQuest,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToLocationChanges,
          [
            updateRunPage,
            controller,
            running,
            storyRun,
            questDistance,
            activeStoryTitle,
            currentQuest,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void playAudio(_i18.AudioPlayer? player) => super.noSuchMethod(
        Invocation.method(
          #playAudio,
          [player],
        ),
        returnValueForMissingStub: null,
      );
}
