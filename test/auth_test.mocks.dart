// Mocks generated by Mockito 5.4.4 from annotations
// in runningapp/test/auth_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:runningapp/state/auth/models/auth_results.dart' as _i6;
import 'package:runningapp/state/backend/authenticator.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Authenticator].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticator extends _i1.Mock implements _i2.Authenticator {
  @override
  _i3.Stream<_i4.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i3.Stream<_i4.User?>.empty(),
        returnValueForMissingStub: _i3.Stream<_i4.User?>.empty(),
      ) as _i3.Stream<_i4.User?>);

  @override
  bool get isAlreadyLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isAlreadyLoggedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get displayName => (super.noSuchMethod(
        Invocation.getter(#displayName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#displayName),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#displayName),
        ),
      ) as String);

  @override
  _i3.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i6.AuthResult> loginWithFacebook() => (super.noSuchMethod(
        Invocation.method(
          #loginWithFacebook,
          [],
        ),
        returnValue: _i3.Future<_i6.AuthResult>.value(_i6.AuthResult.aborted),
        returnValueForMissingStub:
            _i3.Future<_i6.AuthResult>.value(_i6.AuthResult.aborted),
      ) as _i3.Future<_i6.AuthResult>);

  @override
  _i3.Future<_i6.AuthResult> loginWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #loginWithGoogle,
          [],
        ),
        returnValue: _i3.Future<_i6.AuthResult>.value(_i6.AuthResult.aborted),
        returnValueForMissingStub:
            _i3.Future<_i6.AuthResult>.value(_i6.AuthResult.aborted),
      ) as _i3.Future<_i6.AuthResult>);

  @override
  _i3.Future<void> sendPasswordResetLink(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetLink,
          [email],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> loginWithEmailAndPassword(
    String? text,
    String? text2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithEmailAndPassword,
          [
            text,
            text2,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
